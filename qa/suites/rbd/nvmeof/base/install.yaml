use_shaman: True
tasks:
- cephadm:
- cephadm.shell:
    host.a:
    # get state before nvmeof deployment
    - ceph orch status
    - ceph orch ps
    - ceph orch ls
    - ceph orch host ls
    - ceph orch device ls
    - ceph osd lspools
    # create pool
    - ceph osd pool create mypool
    - ceph osd pool application enable mypool rbd
    - ceph osd lspools
    - ceph osd pool ls detail
    # deploy nvmeof
    - ceph config set mgr mgr/cephadm/container_image_nvmeof quay.io/barakda1/nvmeof:0.0.3
    - ceph config get mgr mgr/cephadm/container_image_nvmeof
    - ceph orch apply nvmeof mypool --placement="1 $(hostname)"
    - ceph orch ps --refresh
    - ceph versions
    - ceph -s
    - ceph orch ls
    - rbd create mypool/myimage --size 8Gi
    - rbd ls mypool
#    - |
#      set -ex
#      #
#      cat /proc/cpuinfo
#
#- exec:
#    host.a:
#    - |
#      set -ex
#      #
#      # print nvmeof start up logs
#      s=$(systemctl list-units | grep nvmeof.mypool | awk '{print $1}')
#      echo "<---- s variable is [ $s ]---->"
#      PAGER=cat journalctl -u $s
- cephadm.nvmeof_context:

- cephadm.wait_for_service:
    service: nvmeof.mypool

- exec:
    client.1:
    - "modprobe nvme-fabrics"
    - "modprobe nvme-tcp"
    - |
      set -ex
      #
      # print nvmeof start up logs
      # s=$(systemctl list-units | grep nvmeof.mypool | awk '{print $1}')
      # echo "<---- s variable is [ $s ]---->"
      # PAGER=cat journalctl -u $s
      GATEWAY1=`cat /etc/ceph/nvmeof.cfg`
      GATEWAY2=`cat /etc/ceph/nvmeof.cfg |grep 'gateway_addr'`
      GATEWAY3=`cat /etc/ceph/nvmeof.cfg |grep 'gateway_addr' | awk -F'[, ]' '{print $3}'`
      echo "<---- GATEWAY1 is [ $GATEWAY1 ]---->"
      echo "<---- GATEWAY2 is [ $GATEWAY2]---->"
      echo "<---- GATEWAY3 is [ $GATEWAY3 ]---->"
      IP1=`cat /etc/ceph/nvmeof.cfg`
      IP2=`cat /etc/ceph/nvmeof.cfg |grep 'ip_address'`
      IP3=`cat /etc/ceph/nvmeof.cfg |grep 'ip_address' | awk -F'[, ]' '{print $3}'`
      echo "<---- IP1 is [ $IP1 ]---->"
      echo "<---- IP2 is [ $IP2 ]---->"
      echo "<---- IP3 is [ $IP3 ]---->"

    #   HOSTNAME=$(hostname)
    #   IMAGE="quay.io/ceph/nvmeof-cli:0.0.3"
    #   POOL="mypool"
    #   MIMAGE="myimage"
    #   BDEV="mybdev"
    #   SERIAL="SPDK00000000000001"
    #   NQN="nqn.2016-06.io.spdk:cnode1"
    #   PORT="4420"
    #   SRPORT="5500"
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_bdev --pool $POOL --image $MIMAGE --bdev $BDEV
    #   podman images
    #   podman ps
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_subsystem --subnqn $NQN --serial $SERIAL
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT add_namespace --subnqn $NQN --bdev $BDEV
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_listener -n $NQN -g client.$GATEWAY -a $IP -s $PORT
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT add_host --subnqn $NQN --host "*"
    #   podman run -it $IMAGE --server-address $IP --server-port $SRPORT get_subsystems
    #   lsmod | grep nvme
    #   nvme list
    #   nvme connect -t tcp --traddr $IP -s $PORT -n $NQN
    #   nvme list

#
#- exec:
#    client.1:
#    - "modprobe nvme-fabrics"
#    - |
#      set -ex
#      #
#      HOSTNAME=$(hostname)
#      IP=$(echo $(hostname -I) | cut -d ' ' -f1)
#      IMAGE="quay.io/ceph/nvmeof-cli:0.0.3"
#      POOL="mypool"
#      MIMAGE="myimage"
#      BDEV="mybdev"
#      SERIAL="SPDK00000000000001"
#      NQN="nqn.2016-06.io.spdk:cnode1"
#      PORT="4420"
#      SRPORT="5500"
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_bdev --pool $POOL --image $MIMAGE --bdev $BDEV
#      podman images
#      podman ps
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_subsystem --subnqn $NQN --serial $SERIAL
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT add_namespace --subnqn $NQN --bdev $BDEV
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT create_listener -n $NQN -g $GATEWAY -a $IP -s $PORT
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT add_host --subnqn $NQN --host "*"
#      podman run -it $IMAGE --server-address $IP --server-port $SRPORT get_subsystems
#      nvme discover -t tcp -a $IP -s $PORT
#      nvme connect -t tcp --traddr $IP -s $PORT -n $NQN
#      nvme list

#- workunit:
#    clients:
#      client.1:
#        - cephadm/nvme_initiator.sh