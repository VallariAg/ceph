#!/usr/bin/python

import subprocess
import csv
import sys
import fnmatch
import re
import os

ROOT_DIR = os.path.realpath(os.path.join(os.path.dirname(__file__), '..'))

# file_component_mapping = open('./file_component_mapping', newline='')
file_component_mapping = open(ROOT_DIR + '/githooks/file_component_mapping', newline='')
mapping_file_reader = csv.reader(file_component_mapping, delimiter=' ', skipinitialspace=True)

file_component_dict = {}

for row in mapping_file_reader:
  file_component_dict[row[0]] = row[1]
  # file_path = row[0]
  # component_name = row[1]
  # print(row)

commit_msg_filepath = sys.argv[1]

commit_msg_filepath = ROOT_DIR + "/.git/COMMIT_EDITMSG"
# if len(sys.argv) > 2:
#   commit_type = sys.argv[2]
# else:
#   commit_type = ''
# if len(sys.argv) > 3:
#   commit_hash = sys.argv[3]
# else:
#   commit_hash = ''
# print("prepare-commit-msg: File: %s\nType: %s\nHash: %s" % (commit_msg_filepath, commit_type, commit_hash))

with open(commit_msg_filepath, 'r+') as f:
  content = f.read()
  print(content)
  result = re.search('Signed-off-by', content)
  print(result, 'babao')
  # f.seek(0, 0)
  # f.write("ISSUE-%s %s" % (issue_number, content))

files_changed = subprocess.check_output(['git','diff','--cached','--name-only']).decode("utf-8") 
files_changed = files_changed.split("\n")

components = []

for files in file_component_dict:
  matched = fnmatch.filter(files_changed, files)
  if matched != []:
    components += [file_component_dict[files]]
  print(matched, files, file_component_dict[files])
print(components)

SOB = os.popen("git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p'")
print(SOB)


print(sys.argv[2])

with open(commit_msg_filepath, 'r+') as f:
  content = f.read()
  f.seek(0, 0)
  f.write("ISSUE- %s" % (content))

